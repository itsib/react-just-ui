@use "./utilites/vars" as vars;

$height: 40px !default;
$margin-top: 4px !default;
$margin-bottom: 2px !default;
$padding-x: .75em !default;
$padding-y: .25em !default;
$border-width: 1px !default;
$border-radius: .375em !default;
$font-base: 1rem !default;
$font-label: .875rem !default;
$font-sub: 12px !default;

@layer #{vars.$prefix}-variables {
  :root {
    @include vars.register(--form-height, $height);
    @include vars.register(--form-font-base, $font-base);
    @include vars.register(--form-font-label, $font-label);
    @include vars.register(--form-font-sub, $font-sub);
    @include vars.register(--form-border-width, $border-width);
    @include vars.register(--form-border-radius, $border-radius);
    @include vars.register(--form-padding-x, $padding-x);
    @include vars.register(--form-padding-y, $padding-y);
    @include vars.register(--form-margin-top, $margin-top);
    @include vars.register(--form-margin-bottom, $margin-bottom);
  }
}

.#{vars.$prefix}-base-control {
  width: auto;

  ::placeholder {
    color: vars.getColor(--form-placeholder);
    font-weight: 400;
  }

  input {
    width: 100%;
    height: 100%;
    color: inherit;
    border: none;
    outline: none;
    font-size: inherit;
    background-color: transparent;
    box-sizing: border-box;
  }

  .control {
    height: vars.get(--form-height);
    font-size: vars.get(--form-font-base);
    color: vars.getColor(--form-text);
    border-radius: vars.get(--form-border-radius);
    border-width: vars.get(--form-border-width);
    border-style: solid;
    outline: none;
    box-sizing: border-box;
    overflow: hidden;
    position: relative;
    transition: border-color .15s ease-in-out, background-color .15s ease-in-out;
    border-color: vars.getColor(--form-border);
    background-color: vars.getColor(--form-bg);
  }

  &:focus-within {

    > .control {
      border-color: vars.getColor(--form-focus-border);
      background-color: vars.getColor(--form-focus-bg);
    }
  }

  &.error {

    > .control {
      border-color: vars.getColor(--error);
    }
  }

  &.disabled {

    > .control {
      border-color: vars.getColor(--form-disabled-border);
      background-color: vars.getColor(--form-disabled-bg);
      pointer-events: none;
      user-select: none;
      opacity: .8;
    }
  }
}

.#{vars.$prefix}-base-toggle {

  &.row, &.row-reverse {
    display: flex;
    flex-wrap: wrap;
    align-items: center;

    .__prefix__-label {
      margin-bottom: 0;
      user-select: none;
    }

    .__prefix__-subscript {
      width: 100%;
    }
  }

  &.row {

    .__prefix__-label {
      order: 2;
    }

    .control {
      margin-right: 15px;
      order: 1;
    }

    .__prefix__-subscript {
      order: 3;
    }
  }

  &.row-reverse {

    .__prefix__-label {
      order: 1;
    }

    .control {
      margin-left: 15px;
      order: 2;
    }

    .__prefix__-subscript {
      order: 3;
    }
  }
}