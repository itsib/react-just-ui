@use "sass:map";
@use 'sass:color';
@use "./mixins/utils" as utils;

$schemes: (light: (), dark: ()) !default;
$form: (
    'height': 40px,
    'margin-top': 4px,
    'margin-bottom': 2px,
    'padding-x': .75em,
    'padding-y': .25em,
    'border-width': 1px,
    'border-radius': .375em,
    'font-base': 1rem,
    'font-label': .875rem,
    'font-sub': 12px,
) !default;
$modal: (
    'border-width': 1px,
    'border-radius': .5em,
    'padding-x': 1rem,
    'padding-y': .875rem,
) !default;

@layer #{utils.$prefix}-colors, #{utils.$prefix}-variables, #{utils.$prefix}-base, #{utils.$prefix}-components;

@layer #{utils.$prefix}-colors {
  @each $name, $scheme in $schemes {
    $class-name: "";
    @if ($name == "dark") {
      $class-name: ".dark"
    }

    :root#{$class-name} {
      @each $var-name, $value in $scheme {
        @include utils.register($var-name, $value, "color");
      }

      // Forms
      @include utils.register(--form-label, color.invert(map.get($scheme, 'foreground'), 10%), "color");
      @include utils.register(--form-text, map.get($scheme, 'foreground'), "color");
      @include utils.register(--form-placeholder, color.invert(map.get($scheme, 'foreground'), 50%), "color");
      @include utils.register(--form-border, map.get($scheme, 'border'), "color");
      @include utils.register(--form-bg, map.get($scheme, 'background'), "color");
      @include utils.register(--form-focus-border, map.get($scheme, 'active'), "color");
      @include utils.register(--form-focus-bg, map.get($scheme, 'background'), "color");
      @include utils.register(--form-disabled-border, map.get($scheme, 'muted'), "color");
      @include utils.register(--form-disabled-bg, map.get($scheme, 'muted'), "color");

      @include utils.register(--list-text, map.get($scheme, 'foreground'), "color");
      @include utils.register(--list-bg, map.get($scheme, 'background'), "color");
      @include utils.register(--list-hover-text, map.get($scheme, 'foreground'), "color");
      @include utils.register(--list-hover-bg, color.invert(map.get($scheme, 'background'), 9%), "color");
      @include utils.register(--list-active-text, map.get($scheme, 'foreground'), "color");
      @include utils.register(--list-active-bg, map.get($scheme, 'background'), "color");

      // Modal
      @include utils.register(--modal-bg, map.get($scheme, 'modal'), "color");
    }
  }
}

@layer #{utils.$prefix}-variables {
  :root {
    // Z index
    @include utils.register(--modal, 1000, "z-index");
    @include utils.register(--toast, 1050, "z-index");
    @include utils.register(--dropdown, 1060, "z-index");
    @include utils.register(--popover, 1070, "z-index");
    @include utils.register(--tooltip, 1080, "z-index");

    // Forms
    @include utils.register(--form-height, map.get($form, "height"));
    @include utils.register(--form-font-base, map.get($form, "font-base"));
    @include utils.register(--form-font-label, map.get($form, "font-label"));
    @include utils.register(--form-font-sub, map.get($form, "font-sub"));
    @include utils.register(--form-border-width, map.get($form, "border-width"));
    @include utils.register(--form-border-radius, map.get($form, "border-radius"));
    @include utils.register(--form-padding-x, map.get($form, "padding-x"));
    @include utils.register(--form-padding-y, map.get($form, "padding-y"));
    @include utils.register(--form-margin-top, map.get($form, "margin-top"));
    @include utils.register(--form-margin-bottom, map.get($form, "margin-bottom"));

    // Modal
    @include utils.register(--modal-border-width, map.get($modal, "border-width"));
    @include utils.register(--modal-border-radius, map.get($modal, "border-radius"));
    @include utils.register(--modal-padding-x, map.get($modal, "padding-x"));
    @include utils.register(--modal-padding-y, map.get($modal, "padding-y"));
  }
}