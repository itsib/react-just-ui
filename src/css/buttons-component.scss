@use "sass:map";
@use "sass:color";
@use "sass:math";
@use "./utilites/vars" as vars;
@use "./utilites/color" as col;

/* Layout */
$height: 40px !default;
$padding: 0.5em 1em !default;
$border-width: 1px !default;
$border-radius: .375em !default;
/* Color Delta */
$hover-delta: 7% !default;
$active-delta: 14% !default;
/* Font */
$font-size: 1rem !default;
$font-weight: 500 !default;
$line-height: 1.5 !default;

@layer #{vars.$prefix}-variables {
  :root {
    @include vars.register(--btn-height, $height);
    @include vars.register(--btn-padding, $padding);
    @include vars.register(--btn-radius, $border-radius);
    @include vars.register(--btn-border-width, $border-width);
    @include vars.register(--btn-font-size, $font-size);
    @include vars.register(--btn-font-weight, $font-weight);
    @include vars.register(--btn-line-height, $line-height);
    @include vars.register(--btn-hover-delta, $hover-delta);
    @include vars.register(--btn-active-delta, $active-delta);
  }
}

:root .btn {

  &.btn-accent {
    background-color: vars.getColor(--btn-accent-bg);
    border-color: vars.getColor(--btn-accent-bg);
    color: vars.getColor(--btn-accent-fg);
  }

  &.btn-primary {
    background-color: vars.getColor(--btn-primary-bg);
    border-color: vars.getColor(--btn-primary-bg);
    color: vars.getColor(--btn-primary-fg);
  }

  &.btn-secondary {
    background-color: vars.getColor(--btn-secondary-bg);
    border-color: vars.getColor(--btn-secondary-bg);
    color: vars.getColor(--btn-secondary-fg);
  }

  &.btn-danger {
    background-color: vars.getColor(--btn-danger-bg);
    border-color: vars.getColor(--btn-danger-bg);
    color: vars.getColor(--btn-danger-fg);
  }

  &.btn-outline-accent {
    background-color: vars.getColor(--btn-accent-bg, 0);
    border-color: vars.getColor(--btn-accent-bg);
    color: vars.getColor(--foreground, .8);
  }

  &.btn-outline-primary {
    background-color: vars.getColor(--btn-primary-bg, 0);
    border-color: vars.getColor(--btn-primary-bg);
    color: vars.getColor(--foreground, .8);
  }

  &.btn-outline-secondary {
    background-color: vars.getColor(--btn-secondary-bg, 0);
    border-color: vars.getColor(--btn-secondary-bg);
    color: vars.getColor(--foreground, .8);
  }

  &.btn-outline-danger {
    background-color: vars.getColor(--btn-danger-bg, 0);
    border-color: vars.getColor(--btn-danger-bg);
    color: vars.getColor(--foreground, .8);
  }
}

.btn {
  height: vars.get(--btn-height);
  padding: vars.get(--btn-padding);
  font-size: vars.get(--btn-font-size);
  font-weight: vars.get(--btn-font-weight);
  line-height: vars.get(--btn-line-height);
  color: vars.getColor(--foreground);
  text-align: center;
  text-decoration: none;
  vertical-align: middle;
  user-select: none;
  cursor: pointer;
  display: inline-block;
  background-color: transparent;
  border: vars.get(--btn-border-width) solid transparent;
  border-radius: vars.get(--btn-radius);
  position: relative;
  transition:
      color .15s ease-in-out,
      background-color .15s ease-in-out,
      border-color .15s ease-in-out,
      opacity .15s ease-in-out,
      filter .15s ease-in-out,
      box-shadow .15s ease-in-out;

  &:active:not(:disabled) {
    transition-duration: 0s;
    filter: saturate(1.3);
  }

  &:disabled {
    background-color: initial;
    border-color: initial;
    color: initial;
    pointer-events: none;
    cursor: default;
    filter: contrast(0.5) brightness(0.5);
  }

  &[data-loading="true"]:not(:disabled) {
    pointer-events: none;
    cursor: default;

    * {
      display: none;
    }
  }

  &.w-full {
    width: 100%;
    max-width: 100%;
  }

  /* Default buttons definition */
  &.btn-accent {

    &:hover {
      background-color: color-mix(in srgb, currentColor vars.get(--btn-hover-delta), vars.getColor(--btn-accent-bg));
      border-color: color-mix(in srgb, currentColor vars.get(--btn-hover-delta), vars.getColor(--btn-accent-bg));
    }

    &:active {
      background-color: color-mix(in srgb, currentColor vars.get(--btn-active-delta), vars.getColor(--btn-accent-bg));
      border-color: color-mix(in srgb, currentColor vars.get(--btn-active-delta), vars.getColor(--btn-accent-bg));
    }
  }

  &.btn-primary {

    &:hover {
      background-color: color-mix(in srgb, currentColor vars.get(--btn-hover-delta), vars.getColor(--btn-primary-bg));
      border-color: color-mix(in srgb, currentColor vars.get(--btn-hover-delta), vars.getColor(--btn-primary-bg));
    }

    &:active {
      background-color: color-mix(in srgb, currentColor vars.get(--btn-active-delta), vars.getColor(--btn-primary-bg));
      border-color: color-mix(in srgb, currentColor vars.get(--btn-active-delta), vars.getColor(--btn-primary-bg));
    }
  }

  &.btn-secondary {

    &:hover {
      background-color: color-mix(in srgb, currentColor vars.get(--btn-hover-delta), vars.getColor(--btn-secondary-bg));
      border-color: color-mix(in srgb, currentColor vars.get(--btn-hover-delta), vars.getColor(--btn-secondary-bg));
    }

    &:active {
      background-color: color-mix(in srgb, currentColor vars.get(--btn-active-delta), vars.getColor(--btn-secondary-bg));
      border-color: color-mix(in srgb, currentColor vars.get(--btn-active-delta), vars.getColor(--btn-secondary-bg));
    }
  }

  &.btn-danger {

    &:hover {
      background-color: color-mix(in srgb, currentColor vars.get(--btn-hover-delta), vars.getColor(--btn-danger-bg));
      border-color: color-mix(in srgb, currentColor vars.get(--btn-hover-delta), vars.getColor(--btn-danger-bg));
    }

    &:active {
      background-color: color-mix(in srgb, currentColor vars.get(--btn-active-delta), vars.getColor(--btn-danger-bg));
      border-color: color-mix(in srgb, currentColor vars.get(--btn-active-delta), vars.getColor(--btn-danger-bg));
    }
  }

  /* Default buttons definition */
  &.btn-outline-accent {

    &:hover {
      background-color: vars.getColor(--btn-accent-bg, vars.get(--btn-hover-delta));
    }

    &:active {
      background-color: vars.getColor(--btn-accent-bg, vars.get(--btn-active-delta));
    }

    &[data-loading="true"]:not(:disabled) {
      color: vars.getColor(--btn-accent-bg);
    }
  }

  &.btn-outline-primary {

    &:hover {
      background-color: vars.getColor(--btn-primary-bg, vars.get(--btn-hover-delta));
    }

    &:active {
      background-color: vars.getColor(--btn-primary-bg, vars.get(--btn-active-delta));
    }

    &[data-loading="true"]:not(:disabled) {
      color: vars.getColor(--btn-primary-bg);
    }
  }

  &.btn-outline-secondary {

    &:hover {
      background-color: vars.getColor(--btn-secondary-bg, vars.get(--btn-hover-delta));
    }

    &:active {
      background-color: vars.getColor(--btn-secondary-bg, vars.get(--btn-active-delta));
    }

    &[data-loading="true"]:not(:disabled) {
      color: vars.getColor(--btn-secondary-bg);
    }
  }

  &.btn-outline-danger {

    &:hover {
      background-color: vars.getColor(--btn-danger-bg, vars.get(--btn-hover-delta));
    }

    &:active {
      background-color: vars.getColor(--btn-danger-bg, vars.get(--btn-active-delta));
    }

    &[data-loading="true"]:not(:disabled) {
      color: vars.getColor(--btn-danger-bg);
    }
  }
}