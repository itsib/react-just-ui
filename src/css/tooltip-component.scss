@use "sass:map";
@use "./utilites/vars" as vars;

$font-size: 12px !default;
$hide-delay: 0s !default;
$show-delay: .4s !default;
$duration: .2s !default;
$arrow-size: 0.5em !default;
$padding: 0.5em 0.75em !default;
$indent: 2px !default;

@layer #{vars.$prefix}-variables {
  :root {
    @include vars.register(--tooltip-font-size, $font-size);
    @include vars.register(--tooltip-hide-delay, $hide-delay);
    @include vars.register(--tooltip-show-delay, $show-delay);
    @include vars.register(--tooltip-duration, $duration);
  }
}

[aria-label] {

  &.xs:after {
    max-width: 60px;
  }
  &.sm:after {
    max-width: 120px;
  }
  &.md:after {
    max-width: 180px;
  }
  &.lg:after {
    max-width: 240px;
  }
  &.xl:after {
    max-width: 300px;
  }

  &[data-position] {
    cursor: pointer;
    position: relative;
    overflow: visible;

    &:after {
      content: attr(aria-label);
      height: min-content;
      width: max-content;
      max-width: 180px;
      padding: $padding;
      color: vars.getColor(--tooltip-text);
      text-wrap: balance;
      white-space: pre-wrap;
      line-height: 1.2;
      font-weight: 400;
      background-color: vars.getColor(--tooltip-bg);
      border-radius: 4px;
      border: 1px solid vars.getColor(--tooltip-border);
      box-shadow: 0 0 5px 0 vars.getColor(--tooltip-border, 0.8);
      z-index: vars.get(--tooltip, "z-index");
    }

    &:before {
      content: " ";
      height: 0;
      width: 0;
      border: $arrow-size solid transparent;
      z-index: calc(#{vars.get(--tooltip, "z-index")} + 1);
    }

    &:after, &:before {
      box-sizing: border-box;
      user-select: none;
      font-size: vars.get(--tooltip-font-size);
      opacity: 0;
      display: block;
      pointer-events: none;
      position: absolute;
      transition-duration: vars.get(--tooltip-duration);
      transition-timing-function: ease;
      transition-delay: vars.get(--tooltip-hide-delay);
    }

    &:hover {

      &:after, &:before {
        opacity: 1;
        transition-delay: vars.get(--tooltip-show-delay);
      }
    }
  }

  &[data-position="top"] {

    &:after {
      margin-bottom: calc(($arrow-size * 2) + $indent);
      transform: translate(-50%, 0px);
    }

    &:before {
      margin-bottom: $indent;
      border-top-color: vars.getColor(--tooltip-bg);
      filter: drop-shadow(0 1px 0px vars.getColor(--tooltip-border))
      drop-shadow(0 1px 1px vars.getColor(--tooltip-border));
      transform: translate(-50%, -2px);
    }

    &:after, &:before {
      bottom: calc(100% - $arrow-size + $indent + 10px);
      left: 50%;
      transition-property: bottom, opacity;
    }

    &:hover {

      &:after, &:before {
        bottom: calc(100% - $arrow-size + $indent);
      }
    }
  }

  &[data-position="bottom"] {

    &:after {
      margin-top: calc(($arrow-size * 2) + $indent);
      transform: translate(-50%, 0);
    }

    &::before {
      margin-top: $indent;
      border-bottom-color: vars.getColor(--tooltip-bg);
      filter: drop-shadow(0 -1px 0px vars.getColor(--tooltip-border))
      drop-shadow(0 -1px 1px vars.getColor(--tooltip-border));
      transform: translate(-50%, 2px);
    }

    &::after, &::before {
      top: calc(100% - $arrow-size + $indent + 10px);
      left: 50%;
      transition-property: top, opacity;
    }

    &:hover{

      &:after, &:before {
        top: calc(100% - $arrow-size + $indent);
      }
    }
  }

  &[data-position="left"] {

    &::after {
      margin-right: calc(($arrow-size * 2) + $indent);
      transform: translate(0, -50%);
    }

    &::before {
      margin-right: $indent;
      border-left-color: vars.getColor(--tooltip-bg);
      filter: drop-shadow(1px 0 0px vars.getColor(--tooltip-border))
      drop-shadow(1px 0 1px vars.getColor(--tooltip-border));
      transform: translate(-2px, -50%);
    }

    &::after,
    &::before {
      top: 50%;
      right: calc(100% - $arrow-size + $indent + 10px);
      transition-property: right, opacity;
    }

    &:hover {

      &::after, &::before {
        right: calc(100% - $arrow-size + $indent);
      }
    }
  }

  &[data-position="right"] {

    &::after {
      margin-left: calc(($arrow-size * 2) + $indent);
      transform: translate(0, -50%);
    }

    &::before {
      margin-left: $indent;
      border-right-color: vars.getColor(--tooltip-bg);
      filter: drop-shadow(-1px 0 0px vars.getColor(--tooltip-border))
      drop-shadow(-1px 0 1px vars.getColor(--tooltip-border));
      transform: translate(2px, -50%);
    }

    &::after, &::before {
      top: 50%;
      left: calc(100% - $arrow-size + $indent + 10px);
      transition-property: left, opacity;
    }

    &:hover {

      &::after, &::before {
        left: calc(100% - $arrow-size + $indent);
      }
    }
  }
}