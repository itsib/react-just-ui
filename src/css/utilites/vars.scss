@use "sass:color";
@use "sass:math";
@use "sass:string";
@use "config:prefix" as config;

$prefix: #{config.$prefix};

@mixin register($key, $value, $type: "variable") {
  $keyPrefix: string.slice($key, 0, 2);

  @if $keyPrefix == "--" {
    $key: string.slice($key, 3);
  }
  $suffix: "";
  @if $type == "color" {
    $suffix: "c";
    $value: math.round(color.channel($value, "red")) math.round(color.channel($value, "green")) math.round(color.channel($value, "blue"));
  }
  @if $type == "z-index" {
    $suffix: "z";
  }
  @if $type == "variable" {
    $suffix: "v";
  }

  --#{$prefix}#{$suffix}-#{$key}: #{$value};
}

@function get($key, $type: "variable") {
  $keyPrefix: string.slice($key, 0, 2);

  @if $keyPrefix == "--" {
    $key: string.slice($key, 3);
  }

  $suffix: "";
  @if $type == "color" {
    $suffix: "c";
  }
  @if $type == "z-index" {
    $suffix: "z";
  }
  @if $type == "variable" {
    $suffix: "v";
  }

  @return var(--#{$prefix}#{$suffix}-#{$key});
}

@function getColor($key, $opacity: 1) {
  $keyPrefix: string.slice($key, 0, 2);
  @if $keyPrefix == "--" {
    $key: string.slice($key, 3);
  }

  @if $opacity == 1 {
    @return string.unquote("rgb(var(--#{$prefix}c-#{$key}))");
  } @else {
    @return string.unquote("rgb(var(--#{$prefix}c-#{$key}) / #{$opacity})");
  }
}

