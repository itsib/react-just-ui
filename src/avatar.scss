@use "css/mixins/variable";

html {
  --image-animation: #{variable.$prefix}-pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@include variable.class(avatar, true) {
  aspect-ratio: 1;
  position: relative;

  .avatar {
    width: inherit;
    height: inherit;
    border-radius: 999999px;
    overflow: hidden;
    border-style: solid;
    border-color: variable.getColor(--background);
    background-color: variable.getColor(--background);
    animation: var(--image-animation);
    transition: border-color .2s ease-in-out;

    & > * {
      width: inherit;
      height: inherit;
      border-radius: 999999px;
      overflow: hidden;
      aspect-ratio: 1;
      display: block;
      transition: opacity .2s ease-in-out;
      opacity: 0;
    }

    .avatar-placeholder {
      fill: variable.getColor(--accent);
      width: 100%;
      height: 100%;
    }
  }

  .ripple {
    top: 0;
    left: 0;
    width: inherit;
    height: inherit;
    border: 1px solid variable.getColor(--accent);
    border-radius: 999999px;
    position: absolute;
    animation: 1.5s linear 0s infinite normal none running #{variable.$prefix}-image-ripple;
    display: none;
  }

  &.ready {

    .avatar {
      animation: none;
      border-color: variable.getColor(--accent);

      & > * {
        opacity: 1;
      }
    }
  }

  &.active {

    .avatar {
      border-color: variable.getColor(--accent, .25);
    }

    .ripple {
      display: block;
    }
  }

  &.loading {

    .avatar {
      animation: var(--image-animation);
      border-color: variable.getColor(--background);;

      & > * {
        opacity: 0;
      }
    }
  }

  &.disabled {
    filter: grayscale(1) brightness(0.5);
    pointer-events: none;
  }
}

