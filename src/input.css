.jui.jui-input {

  .control {

    .prefix, .suffix {
      --jui-inner-border-radius: calc(var(--jui-border-radius) - 1px);
      padding: 0 0.75em;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: default;
      user-select: none;
      transition: box-shadow .15s ease-in-out, border-color .15s ease-in-out, color .15s ease-in-out;
      box-shadow: none;
      white-space: nowrap;
    }

    > .prefix {
      color: rgb(var(--jui-prefix-rgb));
      border-radius: var(--jui-inner-border-radius) 0 0 var(--jui-inner-border-radius);
      border-right: var(--jui-prefix-border-width) solid rgb(var(--jui-border-rgb));
    }

    > .suffix {
      color: rgb(var(--jui-suffix-rgb));
      border-radius: 0 var(--jui-inner-border-radius) var(--jui-inner-border-radius) 0;
      border-left: var(--jui-suffix-border-width) solid rgb(var(--jui-border-rgb));
    }
  }

  &:focus-within {

    .control {

      > .suffix, > .prefix {
        border-color: rgb(var(--jui-border-focus-rgb));
        box-shadow: 0 0 2px 0 rgb(var(--jui-border-focus-rgb)),
          0 0 2px -1px inset rgb(var(--jui-border-focus-rgb));
      }
    }
  }

  &.error {

    .control {

      > .prefix, > .suffix {
        border-color: rgb(var(--jui-error-rgb));
        box-shadow: none;
      }
    }
  }

  &.disabled {

    .control {

      > .prefix {
        color: rgb(var(--jui-prefix-rgb) / .6);
        border-color: rgb(var(--jui-border-rgb));
      }

      > .suffix {
        color: rgb(var(--jui-suffix-rgb) / .6);
        border-color: rgb(var(--jui-border-rgb));
      }
    }
  }
}